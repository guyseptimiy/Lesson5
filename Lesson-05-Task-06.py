# Сформировать (не программно) текстовый файл.
# В нём каждая строка должна описывать учебный предмет и наличие лекционных, практических и лабораторных занятий по
# предмету. Сюда должно входить и количество занятий. Необязательно, чтобы для каждого предмета были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести его на экран.
# Примеры строк файла: Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

# Импортируем работы с аргументами и именами частей файла
from sys import argv


def process_file(input_file_name):
    # создаем словарь предметов, где предмет - ключ, а значение - общее число занятий
    out_list = {}

    try:

        # Открываем файл на чтение
        file_obg = open(input_file_name, 'r', encoding='utf-8')

        # обходим все строки в файле по следующей схеме
        # сначал строку делим по знаку ':' - получаем предмет и часы
        # часы делим по пробелам, а дальше отсекаем число до скобки
        for file_line in file_obg:

            think_data = file_line.split(':')
            # предмет
            think_name = think_data[0].replace('\ufeff', '')
            exist_hours = out_list.get(think_name)
            # часы
            hours = think_data[1].split()
            for el in hours:
                kind = el.split('(')
                if exist_hours is None:
                    exist_hours = int(kind[0])
                else:
                    exist_hours += int(kind[0])

            out_list.update({think_name: exist_hours})

        print(out_list)

    except IOError:
        # в случае ошибки ввода вывода - сообщаем
        print("Ошибка ввода-вывода в файл")

    except ValueError:
        # в случае если аргументов мало - сообщаем
        exit("Файл данных содержит ошибку")

    finally:
        # не забываем закрывать файл
        file_obg.close()


# Получаем из командной строки путь к файлу, выработку в часах, ставку за час, премию
try:
    name, input_file = argv
    print(f'input : {input_file}')

    process_file(input_file)

except ValueError:
    # в случае если аргументов мало - сообщаем
    exit("Необходимо указать имя входного файла как первый параметр строки запуска скрипта")
